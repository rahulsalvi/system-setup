---
- name: Install ssh packages
  community.general.pacman:
    name:
      - openssh
      - gawk
      - rsync
      - ufw
    state: present
  become: true
  when: ansible_facts['distribution'] == "Archlinux"

- name: Create ssh group
  ansible.builtin.group:
    name: ssh
    state: present
  become: true
  notify: "Restart sshd"

- name: Add running user to ssh group
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: ssh
    append: true
  become: true

- name: Ensure environment.d config directory exists
  ansible.builtin.file:
    path: "{{ ansible_facts.user_dir }}/.config/environment.d"
    state: directory
    mode: u=rwx,g=rx,o=rx
  when: enable_agent

- name: Set up SSH_AUTH_SOCK
  ansible.builtin.copy:
    src: ssh_auth_socket.conf
    dest: "{{ ansible_facts.user_dir }}/.config/environment.d/ssh_auth_socket.conf"
    mode: u=rw,g=r,o=r
  when: enable_agent

- name: Enable ssh-agent
  ansible.builtin.systemd_service:
    name: ssh-agent
    enabled: true
    state: started
    scope: user
  when: enable_agent

- name: Create trusted user CA keys file
  ansible.builtin.assemble:
    src: files/pki/ssh/user_ca
    dest: /etc/ssh/trusted_user_ca_keys
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  become: true
  notify: "Restart sshd"

- name: Create global known_hosts file
  ansible.builtin.template:
    src: templates/known_hosts.j2
    dest: /etc/ssh/ssh_known_hosts
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  become: true

- name: Set up ssh config files
  ansible.posix.synchronize:
    src: config/
    dest: /etc/ssh/
    owner: false
    group: false
    times: false
    checksum: true
  become: true
  notify: "Restart sshd"

- name: Remove small Diffie-Hellman moduli
  ansible.builtin.shell:
    chdir: /etc/ssh
    cmd: cp moduli moduli.old && awk -i inplace '$5 >= 3071' moduli
    creates: /etc/ssh/moduli.old
  become: true
  notify: "Restart sshd"

- name: Limit ssh access through firewall
  community.general.ufw:
    rule: limit
    name: SSH
  become: true

# Generate some keys so that sshd will start cleanly
# These will likely be regenerated later when creating host certificates
- name: Generate RSA key
  community.crypto.openssh_keypair:
    path: /etc/ssh/ssh_host_rsa_key
    size: 4096
    owner: root
    group: root
  become: true
  notify: "Restart sshd"

- name: Generate ED25519 key
  community.crypto.openssh_keypair:
    path: /etc/ssh/ssh_host_ed25519_key
    type: ed25519
    owner: root
    group: root
  become: true
  notify: "Restart sshd"

- name: Remove ECDSA key
  community.crypto.openssh_keypair:
    path: /etc/ssh/ssh_host_ecdsa_key
    state: absent
  become: true
  notify: "Restart sshd"

- name: Mask sshdgenkeys service
  ansible.builtin.systemd_service:
    name: sshdgenkeys
    masked: true
  become: true
  when: ansible_facts['distribution'] == "Archlinux"

- name: Start and enable sshd
  ansible.builtin.systemd_service:
    name: sshd
    state: started
    enabled: true
  become: true
  when: ansible_facts['distribution'] == "Archlinux"
